<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS WeblÃ¶sungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Model;

use Geissweb\Euvat\Api\Data\ValidationInterface;
use Magento\Framework\Model\AbstractModel;

/**
 * Class Validation
 */
class Validation extends AbstractModel implements ValidationInterface
{
    /**
     * @return void
     */
    protected function _construct()
    {
        $this->_init(\Geissweb\Euvat\Model\ResourceModel\Validation::class);
    }

    /**
     * Get validation_id
     * @return string
     */
    public function getValidationId()
    {
        return $this->getData(self::VALIDATION_ID);
    }

    /**
     * Set validation_id
     * @param string $validationId
     * @return $this
     */
    public function setValidationId($validationId)
    {
        return $this->setData(self::VALIDATION_ID, $validationId);
    }

    /**
     * Get vat_id
     * @return string
     */
    public function getVatId()
    {
        return $this->getData(self::VAT_ID);
    }

    /**
     * Set vat_id
     * @param string $vat_id
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatId($vat_id)
    {
        return $this->setData(self::VAT_ID, $vat_id);
    }

    /**
     * Get vat_is_valid
     * @return string
     */
    public function getVatIsValid()
    {
        return $this->getData(self::VAT_IS_VALID);
    }

    /**
     * Set vat_is_valid
     * @param string $vat_is_valid
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatIsValid($vat_is_valid)
    {
        return $this->setData(self::VAT_IS_VALID, $vat_is_valid);
    }

    /**
     * Get vat_request_success
     * @return string
     */
    public function getVatRequestSuccess()
    {
        return $this->getData(self::VAT_REQUEST_SUCCESS);
    }

    /**
     * Set vat_request_success
     * @param string $vat_request_success
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatRequestSuccess($vat_request_success)
    {
        return $this->setData(self::VAT_REQUEST_SUCCESS, $vat_request_success);
    }

    /**
     * Get vat_request_id
     * @return string
     */
    public function getVatRequestId()
    {
        return $this->getData(self::VAT_REQUEST_ID);
    }

    /**
     * Set vat_request_id
     * @param string $vat_request_id
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatRequestId($vat_request_id)
    {
        return $this->setData(self::VAT_REQUEST_ID, $vat_request_id);
    }

    /**
     * Get vat_request_date
     * @return string
     */
    public function getVatRequestDate()
    {
        return $this->getData(self::VAT_REQUEST_DATE);
    }

    /**
     * Set vat_request_date
     * @param string $vat_request_date
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatRequestDate($vat_request_date)
    {
        return $this->setData(self::VAT_REQUEST_DATE, $vat_request_date);
    }

    /**
     * Get vat_trader_name
     * @return string
     */
    public function getVatTraderName()
    {
        return $this->getData(self::VAT_TRADER_NAME);
    }

    /**
     * Set vat_trader_name
     * @param string $vat_trader_name
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatTraderName($vat_trader_name)
    {
        return $this->setData(self::VAT_TRADER_NAME, $vat_trader_name);
    }

    /**
     * Get vat_trader_address
     * @return string
     */
    public function getVatTraderAddress()
    {
        return $this->getData(self::VAT_TRADER_ADDRESS);
    }

    /**
     * Set vat_trader_address
     * @param string $vat_trader_address
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setVatTraderAddress($vat_trader_address)
    {
        return $this->setData(self::VAT_TRADER_ADDRESS, $vat_trader_address);
    }

    /**
     * Get handle
     * @return string
     */
    public function getHandle()
    {
        return $this->getData(self::HANDLE);
    }

    /**
     * Set handle
     * @param string $handle
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setHandle($handle)
    {
        return $this->setData(self::HANDLE, $handle);
    }

    /**
     * Get request_message
     * @return string
     */
    public function getRequestMessage()
    {
        return $this->getData(self::REQUEST_MESSAGE);
    }

    /**
     * Set request_message
     * @param string $request_message
     * @return \Geissweb\Euvat\Api\Data\ValidationInterface
     */
    public function setRequestMessage($request_message)
    {
        return $this->setData(self::REQUEST_MESSAGE, $request_message);
    }

    /**
     * @return bool|string
     */
    public function getVatRequestCountryCode()
    {
        return substr($this->getVatId(), 0, 2);
    }
}
