<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS WeblÃ¶sungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Model\Validation;

use Magento\Framework\Model\AbstractExtensibleModel;

/**
 * Class Result
 * Modelclass for validation results
 */
class Result extends AbstractExtensibleModel implements \Geissweb\Euvat\Api\Data\ValidationResultInterface
{
    /**
     * @var string
     */
    protected $_eventPrefix = 'vat_validation';

    /**
     * @var string
     */
    protected $_eventObject = 'result';

    /**
     * @return string
     */
    public function getWarning()
    {
        return $this->getData(self::KEY_WARNING);
    }

    /**
     * @param bool $bool
     * @return $this
     */
    public function setWarning($bool)
    {
        return $this->setData(self::KEY_WARNING, $bool);
    }

    /**
     * @return string
     */
    public function getError()
    {
        return $this->getData(self::KEY_ERROR);
    }

    /**
     * @param string $string
     * @return $this
     */
    public function setError($string)
    {
        return $this->setData(self::KEY_ERROR, $string);
    }

    /**
     * @return string
     */
    public function getRequestMessage()
    {
        return $this->getData(self::KEY_REQUEST_MESSAGE);
    }

    /**
     * @param string $requestMessage
     *
     * @return $this
     */
    public function setRequestMessage($requestMessage)
    {
        return $this->setData(self::KEY_REQUEST_MESSAGE, $requestMessage);
    }

    /**
     * @return string
     */
    public function getHandle()
    {
        return $this->getData(self::KEY_HTTP_REQUEST_HANDLE);
    }

    /**
     * @param string $handle
     *
     * @return $this
     */
    public function setHandle($handle)
    {
        return $this->setData(self::KEY_HTTP_REQUEST_HANDLE, $handle);
    }

    /**
     * @param string $vatId
     *
     * @return $this
     */
    public function setVatId($vatId)
    {
        return $this->setData(self::KEY_VAT_ID, $vatId);
    }

    /**
     * @return string
     */
    public function getVatId()
    {
        return $this->getData(self::KEY_VAT_ID);
    }

    /**
     * @return string
     */
    public function getVatIsValid()
    {
        return $this->getData(self::KEY_VAT_IS_VALID);
    }

    /**
     * @param bool $vatIsValid
     * @return $this
     */
    public function setVatIsValid($vatIsValid)
    {
        return $this->setData(self::KEY_VAT_IS_VALID, $vatIsValid);
    }

    /**
     * @return string
     */
    public function getVatRequestSuccess()
    {
        return $this->getData(self::KEY_VAT_REQUEST_SUCCESS);
    }

    /**
     * @param string $vatRequestSuccess
     * @return $this
     */
    public function setVatRequestSuccess($vatRequestSuccess)
    {
        return $this->setData(self::KEY_VAT_REQUEST_SUCCESS, $vatRequestSuccess);
    }

    /**
     * @return string
     */
    public function getVatRequestId()
    {
        return $this->getData(self::KEY_VAT_REQUEST_ID);
    }

    /**
     * @param string $vatRequestId
     * @return $this
     */
    public function setVatRequestId($vatRequestId)
    {
        return $this->setData(self::KEY_VAT_REQUEST_ID, $vatRequestId);
    }

    /**
     * @return string
     */
    public function getVatRequestDate()
    {
        return $this->getData(self::KEY_VAT_REQUEST_DATE);
    }

    /**
     * @param string $vatRequestDate
     * @return $this
     */
    public function setVatRequestDate($vatRequestDate)
    {
        return $this->setData(self::KEY_VAT_REQUEST_DATE, $vatRequestDate);
    }

    /**
     * @return string
     */
    public function getVatTraderName()
    {
        return $this->getData(self::KEY_VAT_TRADER_NAME);
    }

    /**
     * @param string $vatTraderName
     * @return $this
     */
    public function setVatTraderName($vatTraderName)
    {
        return $this->setData(self::KEY_VAT_TRADER_NAME, $vatTraderName);
    }

    /**
     * @return string
     */
    public function getVatTraderAddress()
    {
        return $this->getData(self::KEY_VAT_TRADER_ADDRESS);
    }

    /**
     * @param string $vatTraderAddress
     * @return $this
     */
    public function setVatTraderAddress($vatTraderAddress)
    {
        return $this->setData(self::KEY_VAT_TRADER_ADDRESS, $vatTraderAddress);
    }

    /**
     * @return string
     */
    public function getVatTraderCompanyType()
    {
        return $this->getData(self::KEY_VAT_TRADER_COMPANY_TYPE);
    }

    /**
     * @param string $vatTraderCompanyType
     * @return $this
     */
    public function setVatTraderCompanyType($vatTraderCompanyType)
    {
        return $this->setData(self::KEY_VAT_TRADER_COMPANY_TYPE, $vatTraderCompanyType);
    }

    /**
     * @return string
     */
    public function getVatRequestCountryCode()
    {
        return $this->getData(self::KEY_VAT_REQUEST_COUNTRY_CODE);
    }

    /**
     * @param string $vatRequestCountryCode
     * @return $this
     */
    public function setVatRequestCountryCode($vatRequestCountryCode)
    {
        return $this->setData(self::KEY_VAT_REQUEST_COUNTRY_CODE, $vatRequestCountryCode);
    }

    /**
     * @return string
     */
    public function getRequesterCountryCode()
    {
        return $this->getData(self::KEY_VAT_REQUESTER_COUNTRY_CODE);
    }

    /**
     * @param string $vatRequestRequesterCountryCode
     * @return $this
     */
    public function setRequesterCountryCode($vatRequestRequesterCountryCode)
    {
        return $this->setData(self::KEY_VAT_REQUESTER_COUNTRY_CODE, $vatRequestRequesterCountryCode);
    }

    /**
     * @return string
     */
    public function getRequesterNumber()
    {
        return $this->getData(self::KEY_VAT_REQUESTER_NUMBER);
    }

    /**
     * @param string $vatRequestRequesterNumber
     *
     * @return $this
     */
    public function setRequesterNumber($vatRequestRequesterNumber)
    {
        return $this->setData(self::KEY_VAT_REQUESTER_NUMBER, $vatRequestRequesterNumber);
    }

    /**
     * TODO: Remove temporary workaround for GB
     * @return bool
     */
    public function getIsGB()
    {
        return $this->getData('is_gb');
    }

    /**
     * TODO: Remove temporary workaround for GB
     * @param bool $isGB
     *
     * @return $this
     */
    public function setIsGB(bool $isGB)
    {
        return $this->setData('is_gb', $isGB);
    }
}
