<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS WeblÃ¶sungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Model\System\Config;

use Magento\Config\Block\System\Config\Form\Field\FieldArray\AbstractFieldArray;

/**
 * Class CustomerGroupPriceDisplay
 */
class CustomerGroupPriceDisplay extends AbstractFieldArray
{
    /**
     * @var \Magento\CatalogInventory\Block\Adminhtml\Form\Field\Customergroup
     */
    protected $_groupRenderer;

    /**
     * @var \Magento\Framework\View\Element\Html\Select
     */
    protected $_displayTypeRenderer;

    /**
     * @param \Magento\Framework\DataObject $row
     *
     * @return \Magento\Framework\DataObject
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    protected function _prepareArrayRow(\Magento\Framework\DataObject $row)
    {
        $customerGroup = $row->getCustomerGroupId();
        $displayType = $row->getDisplayType();
        $options = [];
        if ($customerGroup !== null) {
            $options['option_' . $this->_getGroupRenderer()->calcOptionHash($customerGroup)] = 'selected="selected"';
        }
        if ($displayType !== null) {
            $options['option_' . $this->_getDisplayTypeRenderer()->calcOptionHash($displayType)] = 'selected="selected"';
        }
        $row->setData('option_extra_attrs', $options);

        return $row;
    }

    /**
     * Prepare to render
     *
     * @return void
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    protected function _prepareToRender()
    {
        $this->addColumn('customer_group_id', [
                'label' => __('Customer Group'),
                'renderer' => $this->_getGroupRenderer()
        ]);
        $this->addColumn('display_type', [
            'label' => __('Display Type'),
            'renderer' => $this->_getDisplayTypeRenderer()
        ]);
        $this->_addAfter = false;
        $this->_addButtonLabel = __('Add display rule');
    }

    /**
     * @return mixed
     */
    protected function _getDisplayTypeRenderer()
    {
        if (!$this->_displayTypeRenderer) {
            try {
                $this->_displayTypeRenderer = $this->getLayout()->createBlock(
                    \Geissweb\Euvat\Block\System\Config\Field\PriceDisplayType::class,
                    '',
                    ['data' => ['is_render_to_js_template' => true]]
                );
                $this->_displayTypeRenderer->setClass('display_type_select');
            } catch (\Exception $e) {
                //nothing
            }
        }
        return $this->_displayTypeRenderer;
    }

    /**
     * Retrieve group column renderer
     *
     * @return \Magento\CatalogInventory\Block\Adminhtml\Form\Field\Customergroup
     * @throws \Magento\Framework\Exception\LocalizedException
     */
    protected function _getGroupRenderer()
    {
        if (!$this->_groupRenderer) {
            $this->_groupRenderer = $this->getLayout()->createBlock(
                \Geissweb\Euvat\Block\System\Config\Field\CustomerGroup::class,
                '',
                ['data' => ['is_render_to_js_template' => true]]
            );
            $this->_groupRenderer->setClass('customer_group_select');
        }
        return $this->_groupRenderer;
    }
}
