<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS WeblÃ¶sungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Model\System\Config\Source;

use Magento\Store\Model\ScopeInterface;

/**
 * Class FieldVisibleCountries
 */
class FieldVisibleCountries implements \Magento\Framework\Data\OptionSourceInterface
{
    /**
     * @var \Magento\Directory\Model\ResourceModel\Country\Collection
     */
    public $countryCollection;
    /**
     * @var \Magento\Directory\Model\AllowedCountries
     */
    public $allowedCountries;
    /**
     * @var \Magento\Framework\App\Request\Http
     */
    public $request;

    /**
     * To get config values
     * @var \Geissweb\Euvat\Helper\Configuration
     */
    private $configHelper;

    /**
     * EuCountries constructor.
     *
     * @param \Geissweb\Euvat\Helper\Configuration                $configHelper
     */
    public function __construct(
        \Geissweb\Euvat\Helper\Configuration $configHelper,
        \Magento\Directory\Model\ResourceModel\Country\CollectionFactory $countryCollectionFactory,
        \Magento\Directory\Model\AllowedCountries $allowedCountryModel,
        \Magento\Framework\App\Request\Http $request
    ) {
        $this->configHelper = $configHelper;
        $this->countryCollection = $countryCollectionFactory->create();
        $this->allowedCountries = $allowedCountryModel;
        $this->request = $request;
    }

    /**
     * Options getter
     * with workaround for https://github.com/magento/magento2/issues/12512
     *
     * @return array
     */
    public function toOptionArray()
    {
        $allowedCountries = $this->allowedCountries->getAllowedCountries();

        $params = $this->request->getParams();
        if (isset($params['website'])) {
            $scope = ScopeInterface::SCOPE_WEBSITE;
            $scopeId = $params['website'];
            $allowedCountries = $this->allowedCountries->getAllowedCountries($scope, $scopeId);
        } elseif (isset($params['store'])) {
            $scope = ScopeInterface::SCOPE_STORE;
            $scopeId = $params['store'];
            $allowedCountries = $this->allowedCountries->getAllowedCountries($scope, $scopeId);
        }

        return $this->countryCollection->addCountryCodeFilter($allowedCountries, 'iso2')
                                      ->setForegroundCountries($this->configHelper->getEuCountries())
                                      ->loadData()
                                      ->toOptionArray(__('-- None --'));
    }
}
