<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS Weblösungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Api\Data;

interface ValidationResultInterface extends \Magento\Framework\Api\ExtensibleDataInterface
{
    const KEY_VAT_ID = 'vat_id';
    const KEY_VAT_IS_VALID = 'vat_is_valid';

    const KEY_VAT_REQUEST_SUCCESS = 'vat_request_success';
    const KEY_VAT_REQUEST_ID = 'vat_request_id';
    const KEY_VAT_REQUEST_DATE = 'vat_request_date';

    const KEY_VAT_TRADER_NAME = 'vat_trader_name';
    const KEY_VAT_TRADER_ADDRESS = 'vat_trader_address';
    const KEY_VAT_TRADER_COMPANY_TYPE = 'vat_trader_company_type';

    const KEY_VAT_REQUEST_COUNTRY_CODE = 'vat_request_country_code';

    const KEY_VAT_REQUESTER_COUNTRY_CODE = 'vat_requester_country_code';
    const KEY_VAT_REQUESTER_NUMBER = 'vat_requester_number';

    const KEY_HTTP_REQUEST_HANDLE = 'handle';

    const KEY_REQUEST_MESSAGE = 'request_message';

    const KEY_WARNING = 'warning';
    const KEY_ERROR = 'error';

    /**
     * @return string
     */
    public function getWarning();

    /**
     * @param bool $bool
     * @return $this
     */
    public function setWarning($bool);

    /**
     * @return string
     */
    public function getError();

    /**
     * @param bool $bool
     * @return $this
     */
    public function setError($bool);

    /**
     * @return string
     */
    public function getRequestMessage();

    /**
     * @param string $requestMessage
     * @return $this
     */
    public function setRequestMessage($requestMessage);

    /**
     * @return string
     */
    public function getHandle();

    /**
     * @param string $handle
     * @return $this
     */
    public function setHandle($handle);

    /**
     * Get VAT Number
     * @return string
     */
    public function getVatId();

    /**
     * Set VAT Number
     *
     * @param string $vatId
     * @return $this
     */
    public function setVatId($vatId);

    /**
     * Is VAT Number valid
     * @return string
     */
    public function getVatIsValid();

    /**
     * Set Is VAT Number valid
     *
     * @param bool $isValid
     * @return $this
     */
    public function setVatIsValid($isValid);

    /**
     * Is VAT number request successful
     * @return string
     */
    public function getVatRequestSuccess();

    /**
     * Set Request successful
     *
     * @param bool $success
     * @return $this
     */
    public function setVatRequestSuccess($success);

    /**
     * @return string
     */
    public function getVatRequestId();

    /**
     * @param string $requestId
     *
     * @return $this
     */
    public function setVatRequestId($requestId);

    /**
     * @return string
     */
    public function getVatRequestDate();

    /**
     * @param string $requestDate
     *
     * @return $this
     */
    public function setVatRequestDate($requestDate);

    /**
     * @return string
     */
    public function getVatTraderName();

    /**
     * @param string $vatTraderName
     *
     * @return $this
     */
    public function setVatTraderName($vatTraderName);

    /**
     * @return string
     */
    public function getVatTraderAddress();

    /**
     * @param string $vatTraderAddress
     *
     * @return $this
     */
    public function setVatTraderAddress($vatTraderAddress);

    /**
     * @return string
     */
    public function getVatTraderCompanyType();

    /**
     * @param string $vatTraderCompanyType
     *
     * @return $this
     */
    public function setVatTraderCompanyType($vatTraderCompanyType);

    /**
     * @return string
     */
    public function getVatRequestCountryCode();

    /**
     * @param string $vatRequestCountryCode
     * @return $this
     */
    public function setVatRequestCountryCode($vatRequestCountryCode);

    /**
     * @return string
     */
    public function getRequesterCountryCode();

    /**
     * @param string $vatRequestRequesterCountryCode
     * @return $this
     */
    public function setRequesterCountryCode($vatRequestRequesterCountryCode);

    /**
     * @return string
     */
    public function getRequesterNumber();

    /**
     * @param string $vatRequestRequesterCountryCode
     * @return $this
     */
    public function setRequesterNumber($vatRequestRequesterCountryCode);
}
