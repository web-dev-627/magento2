<?php
/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS Weblösungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

namespace Geissweb\Euvat\Validator;

class Syntax
{
    /**
     * Basic syntax VAT number check
     * @param string $vatNumber
     * @param string $countryCode
     *
     * @return bool
     */
    public function isValid($vatNumber = '', $countryCode = '')
    {
        if ($vatNumber != '' && $countryCode != '') {
            // based on http://ec.europa.eu/taxation_customs/vies/faq.html#item_11
            $regex = '';
            switch ($countryCode) {
                case 'AT': // Austria
                    $regex = '(AT)?U[0-9]{8}';
                    break;
                case 'BE': // Belgium
                    $regex = '(BE)?0[0-9]{9}';
                    break;
                case 'BG': // Bulgaria
                    $regex = '(BG)?[0-9]{9,10}';
                    break;
                case 'CY': // Cyprus
                    $regex = '(CY)?[0-9]{8}[A-Z]';
                    break;
                case 'CZ': // Czech Republic
                    $regex = '(CZ)?[0-9]{8,10}';
                    break;
                case 'DE': // Germany
                    $regex = '(DE)?[0-9]{9}';
                    break;
                case 'DK': // Denmark
                    $regex = '(DK)?[0-9]{8}';
                    break;
                case 'EE': // Estonia
                    $regex = '(EE)?[0-9]{9}';
                    break;
                case 'EL': // Greece
                case 'GR': // Greece
                    $regex = '(EL|GR)?[0-9]{9}';
                    break;
                case 'ES': // Spain
                    $regex = '(ES)?[0-9A-Z][0-9]{7}[0-9A-Z]';
                    break;
                case 'FI': // Finland
                    $regex = '(FI)?[0-9]{8}';
                    break;
                case 'FR': // France
                    $regex = '(FR)?[0-9A-Z]{2}[0-9]{9}';
                    break;
                //case 'GB': // United Kingdom
                //    $regex = '(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})';
                //    break;
                case 'NI': // Northern Ireland
                case 'XI': // Northern Ireland
                    $regex = '(XI)?[0-9]{3}[0-9]{4}[0-9]{2}';
                    break;
                case 'HR': // Croatia
                    $regex = '(HR)?[0-9]{11}';
                    break;
                case 'HU': // Hungary
                    $regex = '(HU)?[0-9]{8}';
                    break;
                case 'IE': // Ireland
                    $regex = '(IE)?(([0-9]{7}WI|[0-9][0-9A-Z\*\+][0-9]{5}[A-Z]{1,2}))';
                    break;
                case 'IT': // Italy
                    $regex = '(IT)?[0-9]{11}';
                    break;
                case 'LT': // Lithuania
                    $regex = '(LT)?([0-9]{9}|[0-9]{12})';
                    break;
                case 'LU': // Luxembourg
                    $regex = '(LU)?[0-9]{8}';
                    break;
                case 'LV': // Latvia
                    $regex = '(LV)?[0-9]{11}';
                    break;
                case 'MT': // Malta
                    $regex = '(MT)?[0-9]{8}';
                    break;
                case 'NL': // Netherlands
                    $regex = '(NL)?[0-9]{9}B([0-9]{2}|O[0-9]{1})';
                    break;
                case 'PL': // Poland
                    $regex = '(PL)?[0-9]{10}';
                    break;
                case 'PT': // Portugal
                    $regex = '(PT)?[0-9]{9}';
                    break;
                case 'RO': // Romania
                    $regex = '(RO)?[0-9]{2,10}';
                    break;
                case 'SE': // Sweden
                    $regex = '(SE)?[0-9]{12}';
                    break;
                case 'SI': // Slovenia
                    $regex = '(SI)?[0-9]{8}';
                    break;
                case 'SK': // Slovakia
                    $regex = '(SK)?[0-9]{10}';
                    break;
                default:
                    break;
            }
            if (preg_match('/^' . $regex . '$/i', $vatNumber)) {
                return true;
            }
        }
        return false;
    }
}
