/**
 * ||GEISSWEB| EU VAT Enhanced
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the GEISSWEB End User License Agreement
 * that is available through the world-wide-web at this URL: https://www.geissweb.de/legal-information/eula
 *
 * DISCLAIMER
 *
 * Do not edit this file if you wish to update the extension in the future. If you wish to customize the extension
 * for your needs please refer to our support for more information.
 *
 * @copyright   Copyright (c) 2015 GEISS Webl√∂sungen (https://www.geissweb.de)
 * @license     https://www.geissweb.de/legal-information/eula GEISSWEB End User License Agreement
 */

define([
    'jquery',
    'Geissweb_Euvat/js/form/element/vat-number-co',
    'Geissweb_Euvat/js/queue',
    'Geissweb_Euvat/js/model/reload',
    'mageUtils',
    'Magento_Ui/js/lib/validation/validator',
    'Magento_Checkout/js/checkout-data',
    'Magento_Checkout/js/action/set-billing-address',
    'Magento_Checkout/js/action/set-shipping-information',
    'Magento_Checkout/js/model/quote',
    'uiRegistry'
], function ($,
     VatNumberCo,
     queue,
     Reloader,
     Utils,
     validator,
     checkoutData,
     setBillingAddress,
     setShippingInfo,
     Quote,
     registry
) {
    'use strict';

    return VatNumberCo.extend({

        defaults: {
            imports: {
            }
        },

        afterValidation: function (jqXHR) {
            var self = this;

            queue.addFunction(function () {
                if (self.debug) {
                    console.log("co-reloader::addresses");
                }
                Reloader.addresses();
            });

            if (this.parentScope === 'billingAddress') {
                queue.addFunction(function () {
                    $.when(setBillingAddress()).done(function () {
                        if (self.debug) {
                            console.log("setBillingAddress done");
                        }
                    });
                });
            }

            if (this.parentScope === 'shippingAddress') {
                queue.addFunction(function () {
                    if (!Quote.isVirtual() && !Utils.isEmpty(Quote.shippingMethod())) {
                        $.when(setShippingInfo()).done(function () {
                            if (self.debug) {
                                console.log("setShippingInfo done");
                            }
                        });
                    }
                });
            }

            return queue.run();
        },

        /**
         * Get the company field value in UiComponent forms
         * @returns {string|*}
         */
        // Fix form validation for Mageplaza
        getCompany: function () {
            if (this.debug) {
                console.log("mageplaza getCompany()", this);
            }
            var company;
            if(this.isBillingField) {
                company = registry.get('checkout.steps.shipping-step.billingAddress.billing-address-fieldset.company');
                if(typeof(company) !== "object") {
                    company = registry.get('checkout.steps.billing-step.payment.afterMethods.billing-address-form.form-fields.company');
                }
            } else {
                company = registry.get('checkout.steps.shipping-step.shippingAddress.shipping-address-fieldset.company');
            }

            if (typeof(company) !== 'object') {
                console.log("mageplaza getCompany() not able to find company field.", [
                    company.value(),
                    typeof(company),
                    Utils.isEmpty(company.value()),
                    company
                ]);
                return '';
            }
            if (this.debug) {
                console.log("mageplaza getCompany() result: "+company.value());
            }
            return company.value();
        },

        /**
         * Get the country field value in UiComponent forms
         * @returns {boolean|*}
         */
        getCountry: function () {
            var country = registry.get(this.parentName + '.' + 'country_id');
            if (typeof(country) !== 'object' || Utils.isEmpty(country.value())) {
                return false;
            }
            if (this.debug) {
                console.log("Mageplaza getCountry: "+country.value()+" from "+this.parentName+ '.' + 'country_id');
            }
            return country.value();
        }

    });
});
